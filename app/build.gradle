plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.yumtaufikhidayat.menjadiandroiddeveloperexpert'
    compileSdk 33

    defaultConfig {
        applicationId "com.yumtaufikhidayat.menjadiandroiddeveloperexpert"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    // Core
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    // UI
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation "org.mockito:mockito-core:4.7.0"
    testImplementation "org.mockito:mockito-inline:4.7.0"

    // Glide
    def glideVersion = '4.15.1'
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Room + ReactiveX
    def roomVersion = '2.5.1'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    // Retrofit + OkHttp + ReactiveX
    def retrofitVersion = '2.9.0'
    def loggingInterceptorVersion = '4.8.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    // ReactiveX libs
    def rxJavaVersion = '2.2.19'
    def rxBindingVersion = '2.0.0'
    def rxAndroidVersion = "2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"

    // LiveData + ReactiveX
    def lifecycleVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycleVersion"

    // Coroutine
    def coroutineVersion = '1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    // LiveData + Android KTX
    def activityKtxVersion = '1.7.2'
    def lifecycleKtxVersion = '2.5.1'
    implementation "androidx.activity:activity-ktx:$activityKtxVersion" //by viewModels()
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleKtxVersion" //lifecycleScope
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKtxVersion" //asLiveData
}